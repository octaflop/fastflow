from unittest import TestCase
from fastflow.utils import trimmer

class TestTrimmer(TestCase):
    def test_trimmer(self):
        lines =\
        """
            @NB500996:62:HHTVGBGX2:2:11101:21857:1054 1:N:0:CGATGT
            TCTTAGCCGCTATTANGGGTTCGTTTGNTCAACGNTTNATNGTCNNNCGTNNNCTGNNNTNNNTCACN
            +
            AAAAAEEEEAEAAEE#EA6EEEEEEEE#E/EEAE#EE#E/#/EE###AEA###AAE###E###AEEE#
            @NB500996:62:HHTVGBGX2:2:11101:25136:1054 1:N:0:CGATGT
            AACTTTCAGTTATGGNTCCTTTGATCGNTCCACCNGGNTANTTGNNNAACNNNGGANNNA
            +
            AAAAAEEEEEEAEEE#EAAEEEEEEEE#EEEEEA#EE#EE#EEE###AEE###EEE###E
            @NB500996:62:HHTVGBGX2:2:11101:14561:1054 1:N:0:CGATGT
            ATCGAACTCTTAGCGNTGGATCACTCGNCTCGTGNGTNGANGAANNNCGCNNNCACACN
            A/AAAEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
            @NB500996:62:HHTVGBGX2:2:11101:19346:1108 1:N:0:CGATGT
            CCTCACGGGTGACGGGGAATCAGGGTTCGATTCCGGAGAGGGAGCCTGTTCACA
            +
            AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
            @NB500996:62:HHTVGBGX2:2:11101:24277:1108 1:N:0:CGATGT
            AATCAGTTGAACATGGGTGAGCCGGTCCTAAGGGACGGGCCTACGCCGTTCGGAGGGGACCCACA
            +
            AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEAEEAEEEEEE
            @NB500996:62:HHTVGBGX2:2:11101:14226:1109 1:N:0:CGATGT
            TGATAAAACGCTGGGTAAGTTAGAGTAACATCAGTGATTGAGACTCACA
            +
            AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
            @NB500996:62:HHTVGBGX2:2:11101:23848:1109 1:N:0:CGATGT
            ATTAAACGAGCGCCGACCTGGGCCGCACTTCTCACCTCGGGGCGGGGGGTGGTTACCCGGGGGCCACA
            +
            AAAAAEEEEE/EAAAE/EEAAEEEEE/EEEEEE/EEEEAAEE/EEEEEEEEE/E/EEAEEEEEEEEEE
            @NB500996:62:HHTVGBGX2:2:11101:11464:1109 1:N:0:CGATGT
            AAGGATTGGCAATTAACGAGCCCAAACAAAGAGGGCAATGTGAGTTAAAAACTGAGTTCACA
        """
        expected = [
            'ACGGGTGACGGGGAATCAGGGTTCGATTCCGGAGAGGGAGCCTG',
            'AGTTGAACATGGGTGAGCCGGTCCTAAGGGACGGGCCTACGCCGTTCGGAGGGGA',
            'AAAACGCTGGGTAAGTTAGAGTAACATCAGTGATTGAGA',
            'AACGAGCGCCGACCTGGGCCGCACTTCTCACCTCGGGGCGGGGGGTGGTTACCCGGGG',
            'ATTGGCAATTAACGAGCCCAAACAAAGAGGGCAATGTGAGTTAAAAACTGAG',
        ]
        got = []
        for line in lines.split("\n"):
            newline = trimmer(line)
            if newline is not None:
                got.append(newline)
        self.assertEqual(got, expected)
